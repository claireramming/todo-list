{"version":3,"sources":["components/TodoItem.js","todosData.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","itemStyle","data","completed","className","type","checked","onChange","handleChange","id","text","value","onClick","handleClick","todosData","App","useState","todos","setTodos","newTask","setNewTask","todoList","map","todo","prevTodos","filter","updateTodos","placeholder","event","target","onKeyPress","nextId","length","console","log","key","newTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAkBeA,MAhBf,SAAkBC,GACd,IAAMC,EAAYD,EAAME,KAAKC,UAAY,iBAAmB,YAC5D,OACI,sBAAKC,UAAWH,EAAhB,UACI,uBAAOI,KAAK,WACRC,QAASN,EAAME,KAAKC,UACpBI,SAAY,kBAAMP,EAAMQ,aAAaR,EAAME,KAAKO,OACpD,4BAAIT,EAAME,KAAKQ,OACf,uBAAOL,KAAK,SAASM,MAAM,IACvBC,QAAS,kBAAMZ,EAAMa,YAAYb,EAAME,KAAKO,WCiB7CK,EA5BG,CACd,CACIL,GAAI,EACJC,KAAM,qBACNP,WAAW,GAEf,CACIM,GAAI,EACJC,KAAM,mBACNP,WAAW,GAEf,CACIM,GAAI,EACJC,KAAM,mBACNP,WAAW,GAEf,CACIM,GAAI,EACJC,KAAM,WACNP,WAAW,GAEf,CACIM,GAAI,EACJC,KAAM,mCACNP,WAAW,ICoDJY,MAvEf,WAAgB,IAAD,EACeC,mBAASF,GADxB,mBACLG,EADK,KACEC,EADF,OAEmBF,qBAFnB,mBAELG,EAFK,KAEIC,EAFJ,KAGPC,EAAWJ,EAAMK,KAAI,SAAAC,GAAI,OAC7B,cAAC,EAAD,CAEErB,KAAMqB,EACNf,aAAcA,EACdK,YAAaA,GAHRU,EAAKd,OAMd,SAASI,EAAYJ,GACnBS,GAAS,SAAAM,GAAS,OAAIA,EAAUC,QAAO,SAAAF,GAAI,OAAIA,EAAKd,KAAOA,QAK7D,SAASD,EAAaC,GACpBS,GAAS,SAAAM,GAUP,MAAO,CACLE,YAVkBF,EAAUF,KAAI,SAAAC,GAC9B,OAAIA,EAAKd,KAAOA,EACP,2BACFc,GADL,IAEEpB,WAAaoB,EAAKpB,YAGfoB,SAyBb,OACE,gCACA,wBAAQnB,UAAU,aAAlB,uBACA,qBAAKA,UAAU,YAAf,SACGiB,IAEH,gCACE,6CACA,uBACEhB,KAAK,OACLM,MAAOQ,EACPQ,YAAY,0BACZpB,SAhDR,SAAuBqB,GAAQR,EAAWQ,EAAMC,OAAOlB,QAiD/CmB,WA9BR,SAAoBF,GAClB,IAAMG,EAASd,EAAMe,OAAS,EAC9BC,QAAQC,IAAIjB,EAAMe,QACA,UAAdJ,EAAMO,MACRjB,GAAS,SAAAM,GACP,IAAMY,EAAU,CACd3B,GAAKsB,EACLrB,KAAOkB,EAAMC,OAAOlB,MACpBR,WAAY,GAEd,MAAM,GAAN,mBAAWqB,GAAX,CAAsBY,OAGxBhB,EAAW,eCxCFiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f1dda34.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction TodoItem(props) {\n    const itemStyle = props.data.completed ? \"completed-item\" : \"todo-item\"\n    return (\n        <div className={itemStyle}>\n            <input type=\"checkbox\" \n                checked={props.data.completed}\n                onChange = {() => props.handleChange(props.data.id)} />\n            <p>{props.data.text}</p>\n            <input type=\"button\" value='X'\n                onClick={() => props.handleClick(props.data.id)}\n                />\n        </div>\n\n    )\n}\n \nexport default TodoItem","const todosData = [\n    {\n        id: 1,\n        text: \"Take out the trash\",\n        completed: true\n    },\n    {\n        id: 2,\n        text: \"Grocery shopping\",\n        completed: false\n    },\n    {\n        id: 3,\n        text: \"Clean gecko tank\",\n        completed: false\n    },\n    {\n        id: 4,\n        text: \"Mow lawn\",\n        completed: true\n    },\n    {\n        id: 5,\n        text: \"Catch up on Arrested Development\",\n        completed: false\n    }\n]\n\nexport default todosData","import React, { useState } from 'react';\nimport './App.css';\nimport TodoItem from './components/TodoItem'\nimport todosData from './todosData'\n\nfunction App() {\n  const [ todos, setTodos ] = useState(todosData)\n  const [ newTask, setNewTask ] = useState()\n  const todoList = todos.map(todo => \n    <TodoItem \n      key={todo.id} \n      data={todo} \n      handleChange={handleChange} \n      handleClick={handleClick}\n    />)\n  \n  function handleClick(id) {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id))\n  }\n\n  function updateNewTask(event) {setNewTask(event.target.value)}\n\n  function handleChange(id) {\n    setTodos(prevTodos => {\n      const updateTodos = prevTodos.map(todo => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              completed : !todo.completed\n            }\n          }\n          return todo\n      })\n      return {\n        updateTodos\n      }\n    })\n  }\n\n  function addNewTask(event) {\n    const nextId = todos.length + 1\n    console.log(todos.length)\n    if (event.key === 'Enter') {\n      setTodos(prevTodos => {\n        const newTodo = {\n          id : nextId,\n          text : event.target.value,\n          completed : false\n        }\n        return [...prevTodos, newTodo]\n        }\n      )\n      setNewTask('')\n    }\n  }\n\n    return (\n      <div>\n      <header className=\"App-header\">Todo List</header>\n      <div className=\"todo-list\">\n        {todoList}\n      </div>\n      <div>\n        <h1>Add a Todo!</h1>\n        <input \n          type='text'\n          value={newTask}\n          placeholder='what do you want to do?'\n          onChange={updateNewTask}\n          onKeyPress={addNewTask}\n          /> \n        </div>\n      </div>\n      )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}